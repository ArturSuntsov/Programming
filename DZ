#Шифр Цезаря
english_lower_alphabet = "abcdefghijklmnopqrstuvwxyz"
english_upper_alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
russian_lower_alphabet = "абвгдеёжзийклмнопрстуфхцчшщъыьэюя"
russian_upper_alphabet = "АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ"
print("Введите сдвиг")
key = int(input())
print("Введите текст")
text = input()

def shifr(k, t):
    """
    Шифрует текст с помощью шифра Цезаря, сдвигая символы на введенное количство позиций
    параметр k: Сдвиг для шифрования
    параметр t: Текст для шифрования
    """
    for i in range(len(t)):
        if t[i] in russian_upper_alphabet:
            print(russian_upper_alphabet[(russian_upper_alphabet.index(t[i]) + k) % len(russian_upper_alphabet)], end="")
        elif t[i] in english_upper_alphabet:
            print(english_upper_alphabet[(english_upper_alphabet.index(t[i]) + k) % len(russian_upper_alphabet)], end="")
        elif t[i] in russian_lower_alphabet:
            print(russian_lower_alphabet[(russian_lower_alphabet.index(t[i]) + k) % len(russian_lower_alphabet)], end="")
        elif t[i] in english_lower_alphabet:
            print(english_lower_alphabet[(english_lower_alphabet.index(t[i]) + k) % len(english_lower_alphabet)], end="")
        else:
            print(t[i], end="")

shifr(key, text)


#Олимпиада
scores = [20, 48, 52, 38, 36, 13, 7, 41, 34, 24, 5, 51, 9, 14, 28]
student_score = int(input("Введите ваш балл: "))
def check_winners(scores, student_score):
    """
    Проверяет, входит ли балл студента в тройку лидеров
    параметр scores: Список баллов участников
    параметр student_score: Балл студента
    """
    sorted_scores = sorted(scores, reverse=True)
    top_three = sorted_scores[:3]
    
    if student_score in top_three:
        print("Вы в тройке победителей!")
    else:
        print("Вы не попали в тройку победителей.")
check_winners(scores, student_score)


#Пироженки и коробочки
cakes = int(input("Введите количество пирожных: "))
def print_pack_report(cakes):
    """
    Проверяет, по сколько пирожных можно расфасовать
    параметр cakes: введенное количество пирожных
    """
    if cakes % 5 == 0 and cakes % 3 == 0:
        print("расфасуем по 3 или по 5")
    elif cakes % 5 == 0 and cakes % 3 != 0:
        print("расфасуем по 5")
    elif cakes % 3 == 0 and cakes % 3 != 0:
        print("расфасуем по 3")
    else: 
        print("Не заказываем!")
print_pack_report(cakes)


#Cложные пароли
import random  

def make_password():
    """
    Создает сложный пароль из (на выбор): 
    Верхнего/нижнего регистра алфавита
    Цифр
    Спец символов
    """
    all_chars = ""
    english_lower = 'abcdefghijklmnopqrstuvwxyz'
    english_upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 
    numbers = "0123456789"
    special_symbols = "!@#№$%^&*()_-+=;:?`~/"
    use_lower = input("Включить нижний регистр? (да/нет): ").lower() == 'да'
    use_upper = input("Включить верхний регистр? (да/нет): ").lower() == 'да'
    use_num = input("Включить цифры? (да/нет): ").lower() == 'да'
    use_symb = input("Включить специальные символы? (да/нет): ").lower() == 'да'

    if use_lower:
        all_chars += english_lower
    if use_upper:
        all_chars += english_upper
    if use_num:
        all_chars += numbers
    if use_symb:
        all_chars += special_symbols
    password = ""
    lenght = int(input("Введите длину пароля: "))
    for _ in range(lenght):  
        password += random.choice(all_chars)
    return password

print("=== Генератор пароля ===")
print("Ваш новый пароль:", make_password())
print("=== Готово! ===")
